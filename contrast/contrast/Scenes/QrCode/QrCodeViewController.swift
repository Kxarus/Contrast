//
//  QrCodeViewController.swift
//  contrast
//
//  Created by Kotovchikhin Vladimir on 06.07.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol QrCodeDisplayLogic: AnyObject {
    func display(viewModel: QrCode.Model.ViewModel.ViewModelType)
}

final class QrCodeViewController: UIViewController {
    
    // MARK: - IBOutlets
    private let imageView: UIImageView = {
        let imageView = UIImageView()
        imageView.contentMode = .scaleAspectFit
        return imageView
    }()
    
    // MARK: - External vars
    var interactor: QrCodeBusinessLogic?
    var router: (NSObjectProtocol & QrCodeRoutingLogic & QrCodeDataPassing)?
    
    // MARK: - Internal vars
    
    
    // MARK: - Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        QrCodeConfigurator.shared.configure(self)
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        QrCodeConfigurator.shared.configure(self)
    }
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
}

// MARK: - Display logic
extension QrCodeViewController: QrCodeDisplayLogic {
    
    func display(viewModel: QrCode.Model.ViewModel.ViewModelType) {
        switch viewModel {
            
        }
    }
}

// MARK: - Private methods
private extension QrCodeViewController {
    private func setupView() {
        view.backgroundColor = .mainBackgroundColor
        setupNavBar(dismiss: true)
        
        view.addSubview(imageView)
        imageView.image = router?.dataStore?.image!
        
        setupConstraint()
    }
    
    private func setupConstraint() {
        imageView.snp.makeConstraints {
            $0.top.equalTo(view.safeAreaLayoutGuide)
            $0.trailing.leading.equalToSuperview()
            $0.bottom.equalToSuperview()
        }
    }
}

// MARK: - Public methods
extension QrCodeViewController {
    
}


