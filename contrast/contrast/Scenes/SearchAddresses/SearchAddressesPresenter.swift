//
//  SearchAddressesPresenter.swift
//  contrast
//
//  Created by Roman Kiruxin on 18.07.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchAddressesPresentationLogic {
    func presentData(response: SearchAddresses.Model.Response.ResponseType)
}

final class SearchAddressesPresenter {
    
    // MARK: - External vars
    weak var viewController: SearchAddressesDisplayLogic?
    
}

// MARK: - Presentation logic
extension SearchAddressesPresenter: SearchAddressesPresentationLogic {
    
    func presentData(response: SearchAddresses.Model.Response.ResponseType) {
        switch response {
        case .addresses(let response):
            var viewModel: [AddressDataModel] = []
            
            let _ = response.map { resp in
                let item = AddressDataModel(city: resp.city ?? "",
                                            street: resp.street ?? "",
                                            house: resp.house ?? "",
                                            latitude: resp.latitude ?? 0,
                                            longitude: resp.longitude ?? 0,
                                            address: resp.address ?? "")
                viewModel.append(item)
            }
            viewController?.display(viewModel: .presentAddresses(viewModel))
        }
    }
}

//  MARK: - Private  methods
private extension SearchAddressesPresenter {
    
}
