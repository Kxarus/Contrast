//
//  ProfileViewController.swift
//  contrast
//
//  Created by Roman Kiruxin on 29.06.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProfileDisplayLogic: AnyObject {
    func display(viewModel: Profile.Model.ViewModel.ViewModelType)
}

final class ProfileViewController: UIViewController {
    
    // MARK: - IBOutlets
    
    
    // MARK: - External vars
    var interactor: ProfileBusinessLogic?
    var router: (NSObjectProtocol & ProfileRoutingLogic & ProfileDataPassing)?
    
    // MARK: - Internal vars
    
    
    // MARK: - Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        ProfileConfigurator.shared.configure(self)
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        ProfileConfigurator.shared.configure(self)
    }
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        if UserDefaultsWorker.fetchActiveAccessToken() == nil && UserDefaultsWorker.fetchActiveRefreshToken() == nil && UserDefaultsWorker.fetchActiveUserPhone() == nil {
            router?.routeToAuth()
        }
    }
}

// MARK: - Display logic
extension ProfileViewController: ProfileDisplayLogic {
    
    func display(viewModel: Profile.Model.ViewModel.ViewModelType) {
        switch viewModel {
            //case .some
        }
    }
}

// MARK: - Private methods
private extension ProfileViewController {
    private func setupView() {
        view.backgroundColor = .mainBackgroundColor
    }
}

// MARK: - Public methods
extension ProfileViewController {
    
}


