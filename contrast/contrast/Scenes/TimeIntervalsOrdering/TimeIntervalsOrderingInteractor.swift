//
//  TimeIntervalsOrderingInteractor.swift
//  contrast
//
//  Created by Roman Kiruxin on 20.07.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TimeIntervalsOrderingBusinessLogic {
    func make(request: TimeIntervalsOrdering.Model.Request.RequestType)
}

protocol TimeIntervalsOrderingDataStore: AnyObject {
    var activeZones: [ZonesGeolocateInfo] { get set }
    var addressData: UserAddressRequest? { get set }
    var isSaveAddress: Bool { get set }
}

final class TimeIntervalsOrderingInteractor {
    
    // MARK: - External vars
    var presenter: TimeIntervalsOrderingPresentationLogic?
    var worker: TimeIntervalsOrderingWorker?
    
    // MARK: - Internal vars
    private let service: Services
    var activeZones: [ZonesGeolocateInfo] = []
    var addressData: UserAddressRequest?
    var isSaveAddress = false
    
    init(service: NetworkServiceable) {
        self.service = Services(service: service)
    }
}

// MARK: - Business logic
extension TimeIntervalsOrderingInteractor: TimeIntervalsOrderingBusinessLogic {
    
    func make(request: TimeIntervalsOrdering.Model.Request.RequestType) {
        switch request {
            //case .some:
        }
    }
}

// MARK: - Data store
extension TimeIntervalsOrderingInteractor: TimeIntervalsOrderingDataStore  {
   
}

// MARK: - Private methods
private extension TimeIntervalsOrderingInteractor {
    
}
