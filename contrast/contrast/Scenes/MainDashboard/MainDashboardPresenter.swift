//
//  MainDashboardPresenter.swift
//  contrast
//
//  Created by Roman Kiruxin on 29.06.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainDashboardPresentationLogic {
    func presentData(response: MainDashboard.Model.Response.ResponseType)
}

final class MainDashboardPresenter {
    
    // MARK: - External vars
    weak var viewController: MainDashboardDisplayLogic?
    
}

// MARK: - Presentation logic
extension MainDashboardPresenter: MainDashboardPresentationLogic {
    
    func presentData(response: MainDashboard.Model.Response.ResponseType) {
        switch response {
        case .stories(let response):
            presentStories(response)
        }
    }
}

//  MARK: - Private  methods
private extension MainDashboardPresenter {
    private func presentStories(_ response: [StoriesResponse]) {
        var viewModel: [StoriesModel] = []
        
        let _ = response.map { resp in
            let item = StoriesModel(id: resp.id ?? 0,
                                    title: resp.title ?? "",
                                    description: resp.description ?? "",
                                    promocode: resp.promocode ?? "",
                                    mediaType: resp.mediaType ?? 0,
                                    mediaLink: resp.mediaLink ?? "",
                                    previewLink: resp.previewLink ?? "")
            viewModel.append(item)
        }
        
        viewController?.display(viewModel: .presentStories(viewModel))
    }
}
