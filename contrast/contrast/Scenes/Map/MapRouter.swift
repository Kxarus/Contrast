//
//  MapRouter.swift
//  contrast
//
//  Created by Roman Kiruxin on 15.07.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PanModal

protocol MapRoutingLogic {
    func routeToSearchAddress()
    func routeToAddressClarification(selectedAddress: AddressDataModel, activeZones: [ZonesGeolocateInfo])
    func routeToTimeIntervalOrdering(activeZones: [ZonesGeolocateInfo], addressData: UserAddressRequest)
}

protocol MapDataPassing {
    var dataStore: MapDataStore? { get }
}

final class MapRouter: NSObject {
    
    // MARK: - External vars
    weak var viewController: MapViewController?
    var dataStore: MapDataStore?
    
    // MARK: - Internal vars
    
}

// MARK: - Routing logic
extension MapRouter: MapRoutingLogic {
    func routeToTimeIntervalOrdering(activeZones: [ZonesGeolocateInfo], addressData: UserAddressRequest) {
        let vc = TimeIntervalsOrderingViewController()
        vc.router?.dataStore?.activeZones = activeZones
        vc.router?.dataStore?.addressData = addressData
        let nc = UINavigationController(rootViewController: vc)
        nc.modalPresentationStyle = .fullScreen
        viewController?.present(nc, animated: true)
    }
    
    func routeToSearchAddress() {
        let vc = SearchAddressesViewController()
        viewController?.presentPanModal(vc)
    }
    
    func routeToAddressClarification(selectedAddress: AddressDataModel, activeZones: [ZonesGeolocateInfo]) {
        let vc = AddressClarificationViewController()
        vc.router?.dataStore?.selectedAddress = selectedAddress
        vc.router?.dataStore?.activeZones = activeZones
        viewController?.presentPanModal(vc)
    }
}

// MARK: - Data passing
extension MapRouter: MapDataPassing {
    
}
