//
//  SuccessOrderViewController.swift
//  contrast
//
//  Created by Roman Kiruxin on 21.07.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SuccessOrderDisplayLogic: AnyObject {
    func display(viewModel: SuccessOrder.Model.ViewModel.ViewModelType)
}

final class SuccessOrderViewController: UIViewController {
    
    // MARK: - IBOutlets
    private let imageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = R.image.successOrder()
        return imageView
    }()
    
    private let titleLabel: UILabel = {
        let label = UILabel()
        label.font = GeneralFonts.generalMedium17
        label.textColor = .textDark
        label.text = R.string.localizable.successOrder()
        return label
    }()
    
    private let descLabel: UILabel = {
        let label = UILabel()
        label.font = GeneralFonts.generalRegular15
        label.textColor = .textLight
        label.textAlignment = .center
        label.numberOfLines = 0
        return label
    }()
    
    private let mainButton: MainButton = {
        let button = MainButton()
        button.setTitle(R.string.localizable.toMain(), for: .normal)
        return button
    }()
    
    // MARK: - External vars
    var interactor: SuccessOrderBusinessLogic?
    var router: (NSObjectProtocol & SuccessOrderRoutingLogic & SuccessOrderDataPassing)?
    
    // MARK: - Internal vars
    
    
    // MARK: - Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        SuccessOrderConfigurator.shared.configure(self)
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        SuccessOrderConfigurator.shared.configure(self)
    }
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        navigationController?.isNavigationBarHidden = true
    }
}

// MARK: - Display logic
extension SuccessOrderViewController: SuccessOrderDisplayLogic {
    
    func display(viewModel: SuccessOrder.Model.ViewModel.ViewModelType) {
        switch viewModel {
            
        }
    }
}

// MARK: - Private methods
private extension SuccessOrderViewController {
    private func setupView() {
        view.backgroundColor = .mainBackgroundColor
        
        view.addSubview(imageView)
        view.addSubview(titleLabel)
        view.addSubview(descLabel)
        view.addSubview(mainButton)
        
        mainButton.addTarget(self, action: #selector(pressMainButton), for: .touchUpInside)
        
        fetchDataInDataStore()
        
        setupConstraints()
    }
    
    private func fetchDataInDataStore() {
        let selectedDate = router?.dataStore?.selectedDate ?? ""
        let selectedTime = router?.dataStore?.selectedTime ?? ""

        descLabel.text = R.string.localizable.successOrderDesc() + " " + selectedDate + " c " + selectedTime
    }
    
    private func setupConstraints() {
        imageView.snp.makeConstraints {
            $0.top.equalToSuperview().inset(93)
            $0.centerX.equalToSuperview()
            $0.width.equalTo(264)
            $0.height.equalTo(266)
        }
        
        titleLabel.snp.makeConstraints {
            $0.top.equalTo(imageView.snp.bottom).offset(50)
            $0.centerX.equalToSuperview()
        }
        
        descLabel.snp.makeConstraints {
            $0.top.equalTo(titleLabel.snp.bottom).offset(16)
            $0.leading.trailing.equalToSuperview().inset(16)
        }
        
        mainButton.snp.makeConstraints {
            $0.bottom.equalTo(view.safeAreaLayoutGuide).inset(14)
            $0.leading.trailing.equalToSuperview().inset(16)
            $0.height.equalTo(46)
        }
    }
    
    @objc private func pressMainButton() {
        router?.routeToMain()
    }
}

// MARK: - Public methods
extension SuccessOrderViewController {
    
}


